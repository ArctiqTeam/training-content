---
# Lab 3
- name: Ansible Operational Labs
  hosts: all
  tasks:
      # This is boilerplate for dealing with an apt module that is not installing
      # python-apt for you.  This checks for the existence of python-apt
    - name: Check if python-apt installed on Debian-based machines
      command: dpkg -s python-apt
      register: pythonapt
      when: "ansible_os_family == 'Debian'"
      ignore_errors: yes

      # This checks the output of the previous command and runs an install of
      # python-apt if not already installed
    - name: Install python-apt for Debian based machines
      shell: apt-get update && apt-get -y install python-apt
      when: "ansible_os_family == 'Debian' and pythonapt.stderr"

      # Install python-pycurl for apt_repository because of missing python-pycurl package
    - name: Install python-software-properties
      apt: pkg=python-pycurl state=present
      when: "ansible_os_family == 'Debian'"

    - name: Add repo for Debian based machines
      apt_repository: repo="deb http://nginx.org/packages/ubuntu/ {{ ansible_distribution_release }} nginx" state=present update_cache=yes
      when: "ansible_os_family == 'Debian'"

    - name: Add key for Debian based machines
      apt_key: url=http://nginx.org/keys/nginx_signing.key state=present
      when: "ansible_os_family == 'Debian'"

    - name: Install package for Debian-based machines
      apt: pkg=nginx state=present
      when: "ansible_os_family == 'Debian'"

    - name: Add repo for EL-based machines
      copy: src=nginx.repo dest=/etc/yum.repos.d/nginx.repo owner=root mode=0644
      when: "ansible_os_family == 'RedHat'"

    - name: Add key for EL-based machines
      rpm_key: "key=http://nginx.org/keys/nginx_signing.key"
      when: "ansible_os_family == 'RedHat'"

    - name: Install package for Debian-based machines
      yum: name=nginx state=present
      when: "ansible_os_family == 'RedHat'"

    - name: Add user www-data
      user: name=www-data state=present

    - name: Enable nginx at boot
      service: name=nginx enabled=yes state=started

      # Lab 5
    - name: Install nginx.conf
      template: src=templates/nginx.conf dest=/etc/nginx/nginx.conf owner=root mode=0644

      # Lab 6
    - name: Create web directories
      file: path="/var/www/{{ item }}" state=directory owner=www-data mode=0755
      with_items: domains

    - name: Install nginx vhost configs
      template: src=templates/vhost.conf dest="/etc/nginx/conf.d/{{ item }}.conf" owner=root mode=0644
      with_items: domains
      # Lab 7
      notify: Restart nginx

  handlers:
    - name: Restart nginx
      service: name=nginx state=restarted